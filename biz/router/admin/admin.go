// Code generated by hertz generator. DO NOT EDIT.

package admin

import (
	"github.com/cloudwego/hertz/pkg/app/server"
	admin "github.com/xinjiyuan97/labor-clients/biz/handler/admin"
)

/*
 This file will register all the routes of the services in the master idl.
 And it will update automatically when you use the "update" command for the idl.
 So don't modify the contents of the file, or your code will be deleted when it is updated.
*/

// Register register routes based on the IDL 'api.${HTTP Method}' annotation.
func Register(r *server.Hertz) {

	root := r.Group("/", rootMw()...)
	{
		_api := root.Group("/api", _apiMw()...)
		{
			_v1 := _api.Group("/v1", _v1Mw()...)
			{
				_admin := _v1.Group("/admin", _adminMw()...)
				_admin.GET("/admins", append(_getadminlistMw(), admin.GetAdminList)...)
				_admins := _admin.Group("/admins", _adminsMw()...)
				_admins.DELETE("/:admin_id", append(_deleteadminMw(), admin.DeleteAdmin)...)
				_admin_id := _admins.Group("/:admin_id", _admin_idMw()...)
				_admin_id.POST("/reset-password", append(_resetadminpasswordMw(), admin.ResetAdminPassword)...)
				{
					_admin_id0 := _admins.Group("/:admin_id", _admin_id0Mw()...)
					_admin_id0.POST("/disable", append(_disableadminMw(), admin.DisableAdmin)...)
					_admin_id0.POST("/enable", append(_enableadminMw(), admin.EnableAdmin)...)
				}
				_admin.POST("/admins", append(_createadminMw(), admin.CreateAdmin)...)
				_admin.GET("/brands", append(_getbrandlistMw(), admin.GetBrandList)...)
				_brands := _admin.Group("/brands", _brandsMw()...)
				_brands.POST("/batch-import", append(_batchimportbrandsMw(), admin.BatchImportBrands)...)
				_brands.GET("/:brand_id", append(_getbranddetailMw(), admin.GetBrandDetail)...)
				_brand_id := _brands.Group("/:brand_id", _brand_idMw()...)
				_brand_id.POST("/review", append(_reviewbrandMw(), admin.ReviewBrand)...)
				_brands.PUT("/:brand_id", append(_updatebrandMw(), admin.UpdateBrand)...)
				_admin.POST("/brands", append(_createbrandMw(), admin.CreateBrand)...)
				_admin.GET("/jobs", append(_getjoblistMw(), admin.GetJobList)...)
				_jobs := _admin.Group("/jobs", _jobsMw()...)
				{
					_job_id := _jobs.Group("/:job_id", _job_idMw()...)
					_job_id.POST("/review", append(_reviewjobMw(), admin.ReviewJob)...)
				}
				_admin.POST("/message-templates", append(_createmessagetemplateMw(), admin.CreateMessageTemplate)...)
				_admin.GET("/notices", append(_getnoticelistMw(), admin.GetNoticeList)...)
				_admin.POST("/notices", append(_sendsystemnoticeMw(), admin.SendSystemNotice)...)
				_admin.GET("/users", append(_getuserlistMw(), admin.GetUserList)...)
				_users := _admin.Group("/users", _usersMw()...)
				_users.PUT("/:user_id", append(_updateuserMw(), admin.UpdateUser)...)
				_user_id := _users.Group("/:user_id", _user_idMw()...)
				_user_id.POST("/reset-password", append(_resetpasswordMw(), admin.ResetPassword)...)
				_admin.POST("/users", append(_createuserMw(), admin.CreateUser)...)
				{
					_config := _admin.Group("/config", _configMw()...)
					_config.GET("/:config_key", append(_getsystemconfigMw(), admin.GetSystemConfig)...)
					_config.PUT("/:config_key", append(_updatesystemconfigMw(), admin.UpdateSystemConfig)...)
				}
				{
					_finance := _admin.Group("/finance", _financeMw()...)
					_finance.GET("/income", append(_getincomestatisticsMw(), admin.GetIncomeStatistics)...)
					_finance.GET("/settlements", append(_getsettlementlistMw(), admin.GetSettlementList)...)
					_settlements := _finance.Group("/settlements", _settlementsMw()...)
					{
						_settlement_id := _settlements.Group("/:settlement_id", _settlement_idMw()...)
						_settlement_id.POST("/process", append(_processsettlementMw(), admin.ProcessSettlement)...)
					}
				}
				{
					_statistics := _admin.Group("/statistics", _statisticsMw()...)
					_statistics.GET("/brands", append(_getbrandstatisticsMw(), admin.GetBrandStatistics)...)
					_statistics.GET("/jobs", append(_getjobstatisticsMw(), admin.GetJobStatistics)...)
					_statistics.GET("/users", append(_getuserstatisticsMw(), admin.GetUserStatistics)...)
				}
			}
		}
	}
}
