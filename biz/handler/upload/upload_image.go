// Code generated by hertz generator.

package upload

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	uploadlogic "github.com/xinjiyuan97/labor-clients/biz/logic/upload"
	"github.com/xinjiyuan97/labor-clients/biz/model/common"
	upload "github.com/xinjiyuan97/labor-clients/biz/model/upload"
	"github.com/xinjiyuan97/labor-clients/config"
)

// UploadImage .
// @router /api/v1/upload/image [POST]
func UploadImage(ctx context.Context, c *app.RequestContext) {
	// 获取上传类型（可选）
	uploadType := c.PostForm("upload_type")

	// 获取上传的文件
	fileHeader, err := c.FormFile("file")
	if err != nil {
		c.JSON(consts.StatusBadRequest, &upload.UploadImageResp{
			Base: &common.BaseResp{
				Code:    400,
				Message: "获取文件失败: " + err.Error(),
			},
		})
		return
	}

	// 打开文件
	file, err := fileHeader.Open()
	if err != nil {
		c.JSON(consts.StatusBadRequest, &upload.UploadImageResp{
			Base: &common.BaseResp{
				Code:    400,
				Message: "打开文件失败: " + err.Error(),
			},
		})
		return
	}
	defer file.Close()

	// 调用业务逻辑
	resp, err := uploadlogic.UploadImageLogic(file, fileHeader, uploadType, &config.GetGlobalConfig().OSS)
	if err != nil {
		c.JSON(consts.StatusInternalServerError, resp)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
